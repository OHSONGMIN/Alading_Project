<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project">


	<!-- 장바구니에 해당 상품이 있는지 조회 -->
	<select id="checkBook"
		parameterType="com.project.model.vo.CartVO" resultType="Integer">
		SELECT
		NVL(BOOK_CNT, 0) AS BOOK_CNT
		FROM CART
		WHERE MEM_ID = (#{memId}) AND BOOK_ID = (#{bookId})
	</select>

	<!-- 해당 상품이 없으면 INSERT 하도록 -->
	<insert id="addCart" parameterType="com.project.model.vo.CartVO">
		INSERT INTO CART (BOOK_ID,
		MEM_ID, PRICE, BOOK_CNT, BOOKNAME)
		VALUES (#{bookId}, #{memId},
		#{price}, 1, #{bookName})
	</insert>

	<!-- 해당 상품이 있으면 UPDATE 하도록 -->
	<update id="updateCart"
		parameterType="com.project.model.vo.CartVO">
		UPDATE CART
		SET BOOK_CNT = BOOK_CNT + 1
		WHERE MEM_ID = (#{memId}) AND BOOK_ID = (#{bookId})
	</update>

	<!-- 장바구니 조회 기능 -->
	<select id="checkTotalCart" parameterType="String"
		resultType="com.project.model.vo.CartVO">
		SELECT BOOK_ID, MEM_ID, PRICE, BOOK_CNT, BOOKNAME
		FROM CART
		WHERE MEM_ID = (#{memId})
	</select>

	<!-- 책 정보 가져오는 기능 BookVO에 생성자 추가하기 -->
	<select id="getInfo" parameterType="int"
		resultType="com.project.model.vo.BookVO">
		SELECT *
		FROM BOOK
		WHERE BOOK_ID = (#{bookId})
	</select>

	<!-- 장바구니 1개 삭제 기능 -->
	<delete id="deleteOne"
		parameterType="com.project.model.vo.CartVO">
		DELETE FROM CART
		WHERE MEM_ID = (#{memId}) AND BOOK_ID = (#{bookId})
	</delete>

	<!-- 장바구니 선택 삭제 기능 -->
	<delete id="deleteSel"
		parameterType="com.project.model.vo.CartVO">
		DELETE FROM CART
		WHERE MEM_ID = (#{memId}) AND BOOK_ID IN (#{bookId})
	</delete>

	<!-- 장바구니 전체 삭제 기능 -->
	<delete id="deleteAll" parameterType="String">
		DELETE FROM CART
		WHERE MEM_ID = (#{memID})
	</delete>

	<!-- 전체 상품 결제 목록에 넣기 지우기...? ???????????????????안쓰일듯 -->
	<insert id="allInsertOrder"
		parameterType="com.project.model.vo.CartVO">
		INSERT INTO ORDER_ID, PRICE, BOOK_ID, MEM_ID, BOOK_CNT,
		BOOKNAME
		VALUES (ORDER_ID_SEQ.NEXTVAL, #{price}, #{bookId}, #{memId},
		#{bookCnt}, #{bookName})
	</insert>

	<!-- 선택 상품 정보 가져오기 -->
	<select id="getCartInfo" parameterType="Map"
		resultType="com.project.model.vo.CartVO">
		SELECT BOOK_CNT, BOOK_ID, MEM_ID, PRICE, BOOKNAME
		FROM CART
		WHERE MEM_ID = #{memId} AND BOOK_ID = #{bookId}
	</select>

	<!-- ORDER 테이블에 주문 내역 담기 -->
	<insert id="insertOrder"
		parameterType="com.project.model.vo.OrderVO">
		INSERT INTO ORDERS(ORDER_ID, TOTAL_PRICE, ORDERDATE,
		DLVYDATE
		, MEM_ID, PAYMENT ,TOTAL_CNT, RCV_PHONE, RCV_ADDRESS,
		RCV_NAME)
		VALUES (ORDER_ID_SEQ.NEXTVAL, #{totalPrice}, DEFAULT, DEFAULT
		, #{memId}, #{payment}, #{totalCnt}, #{rcvPhone}, #{rcvAddress},
		#{rcvName})
	</insert>

	<!-- ORDER 테이블의 다음 시퀀스 값 가져오기 -->
	<select id="seleteOrderId" parameterType="String"
		resultType="int">
		SELECT MAX(ORDER_ID)
		FROM ORDERS
		WHERE MEM_ID = #{memId}
	</select>

	<!-- DETAILS 테이블에 상세 정보 담기 -->
	<insert id="insertDetail"
		parameterType="com.project.model.vo.CartVO">
		INSERT INTO DETAILS(DETAIL_NUM, ORDER_ID, MEM_ID,
		BOOK_ID, BOOKNAME, BOOK_CNT, PRICE)
		VALUES (DETAIL_NUM_SEQ.NEXTVAL,
		#{orderId}, #{memId}, #{bookId}, #{bookName}, #{bookCnt}, #{price})
	</insert>

	<!-- 주문 정보 가져오는 기능(배송지 등) -->
	<select id="getOrderInfo" parameterType="int"
		resultType="com.project.model.vo.OrderVO">
		SELECT ORDER_ID, TOTAL_PRICE, ORDERDATE, DLVYDATE
		, MEM_ID,
		PAYMENT ,TOTAL_CNT, RCV_PHONE, RCV_ADDRESS, RCV_NAME
		FROM ORDERS
		WHERE ORDER_ID = #{orderId}
	</select>

	<!-- 내가 주문한 모든 orderId를 불러옴 -->
	<select id="selectOrderAllId" parameterType="String"
		resultType="int">
		SELECT ORDER_ID
		FROM ORDERS
		WHERE MEM_ID = #{memId}
		ORDER BY ORDER_ID DESC
	</select>

	<!-- orderId를 이용해서 상세 조회 -->
	<select id="selectDetailByOrderId" parameterType="int"
		resultType="com.project.model.vo.DetailVO">
		SELECT DETAIL_NUM, ORDER_ID, MEM_ID, BOOK_ID
		, BOOKNAME, BOOK_CNT, PRICE, BOOK_IMAGE
		FROM DETAILS
		WHERE ORDER_ID = #{orderId}
	</select>

	<!-- orderId를 받아서 주문 취소 ORDERS 테이블에서 제거 -->
	<delete id="deleteOneOrder" parameterType="int">
		DELETE FROM ORDERS
		WHERE ORDER_ID = #{orderId}
	</delete>

	<!-- orderId를 받아서 주문 취소 DETAILS 테이블에서 제거 -->
	<delete id="deleteOneDetail" parameterType="int">
		DELETE FROM DETAILS
		WHERE ORDER_ID = #{orderId}
	</delete>

	<!-- LIKES 테이블에 해당 상품이 있는지 조회 -->
	<select id="checkLike"
		parameterType="com.project.model.vo.LikeVO" resultType="Integer">
		SELECT COUNT(*)
		FROM LIKES
		WHERE MEM_ID = #{memId} AND BOOK_ID= #{bookId}
	</select>

	<!-- 찜 목록에 추가 -->
	<insert id="addLike" parameterType="com.project.model.vo.LikeVO">
		INSERT INTO LIKES(BOOK_ID,
		MEM_ID, PRICE, BOOKNAME, BOOK_IMAGE)
		VALUES (#{bookId}, #{memId},
		#{price}, #{bookName}, #{bookImage})
	</insert>

	<!-- memId로 찜 목록 조회 -->
	<select id="checkTotalLike" parameterType="String"
		resultType="com.project.model.vo.LikeVO">
		SELECT BOOK_ID, MEM_ID, PRICE, BOOKNAME, BOOK_IMAGE
		FROM LIKES
		WHERE MEM_ID = #{memId}
	</select>

	<!-- 찜 목록에서 삭제 -->
	<delete id="deleteLike"
		parameterType="com.project.model.vo.LikeVO">
		DELETE FROM LIKES
		WHERE MEM_ID = #{memId} AND BOOK_ID = #{bookId}
	</delete>

	<!-- 수량 증가하는 기능 -->
	<update id="minusCnt" parameterType="map">
		UPDATE CART
		SET BOOK_CNT = #{bookCnt} - 1
		WHERE MEM_ID = #{memId} AND BOOK_ID = #{bookId}
	</update>

	<!-- 수량 감소시키는 기능 -->
	<update id="plusCnt" parameterType="map">
		UPDATE CART
		SET BOOK_CNT = #{bookCnt} + 1
		WHERE MEM_ID = #{memId} AND BOOK_ID = #{bookId}
	</update>

	<!-- (관리자)주문내역 조회 기능 -->
	<select id="checkUserOrder" parameterType="String"
		resultType="com.project.model.vo.OrderVO">
		SELECT * FROM ORDERS WHERE MEM_ID = #{memId}
	</select>
</mapper>






